
from telegram.ext import CommandHandler, MessageHandler, filters, CallbackQueryHandler
from services.date_service import add_date
from user_type import is_admin
from buttons.buttons import get_admin_buttons, get_user_buttons, get_cancel_keyboard

import pandas as pd
import os


DATA_FILE = 'dates.csv'
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

async def wake_up(update, context) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –±–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, —Å –∫–Ω–æ–ø–∫–∞–º–∏."""
    chat = update.effective_chat
    chat_id = update.message.chat.id
    name = update.message.chat.first_name

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if is_admin(chat_id):  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        reply_markup = get_admin_buttons()  # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
        await context.bot.send_message(chat_id=chat.id,
                                       text='–ü—Ä–∏–≤–µ—Ç, {}, –µ—Å—Ç—å –Ω–æ–≤—ã–µ –¥–∞—Ç—ã? –ú–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–º–µ—é—â–∏–µ—Å—è –∑–∞–ø–∏—Å–∏.'.format(name),
                                       reply_markup=reply_markup)
    else:
        reply_markup = get_user_buttons()  # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
        await context.bot.send_message(chat_id=chat.id,
                                       text='–ü—Ä–∏–≤–µ—Ç, {}! –Ø –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏.\n–ú–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –¥–∞—Ç –∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è'.format(name),
                                       reply_markup=reply_markup)

async def add_date_handler(update, context) -> None:
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–æ–¥ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏."""
    chat_id = update.callback_query.message.chat.id  # –ò—Å–ø–æ–ª—å–∑—É–µ–º callback_query
    user_states[chat_id] = 'adding_date'  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await context.bot.send_message(chat_id=chat_id,
                                   text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM HH:MM.',
                                   reply_markup=get_cancel_keyboard())

async def cancel_handler(update, context) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ—Ç–º–µ–Ω—ã."""
    chat_id = update.callback_query.message.chat.id  # –ò—Å–ø–æ–ª—å–∑—É–µ–º callback_query

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_states.get(chat_id) is not None:
        user_states[chat_id] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await context.bot.send_message(chat_id=chat_id,
                                       text='–•–æ—Ä–æ—à–æ, –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.')
    else:
        await context.bot.send_message(chat_id=chat_id,
                                       text='–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã.')

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –±–ª–æ–∫ –∫–Ω–æ–ø–æ–∫
    if is_admin(chat_id):  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        reply_markup = get_admin_buttons()  # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
    else:
        reply_markup = get_user_buttons()  # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await context.bot.send_message(chat_id=chat_id,
                                   text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                                   reply_markup=reply_markup)

async def handle_date_input(update, context) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    chat_id = update.message.chat.id  # –ó–¥–µ—Å—å –≤—Å–µ –µ—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º message, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥

    if user_states.get(chat_id) == 'adding_date':
        date_time = update.message.text
        name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"  # –ò–º—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        try:
            date_str, time_str = date_time.split()  # –†–∞–∑–¥–µ–ª—è–µ–º –≤–≤–æ–¥ –Ω–∞ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
            result_message = add_date(date_str, time_str, name)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã

            if "–û—à–∏–±–∫–∞" in result_message:
                await context.bot.send_message(chat_id=chat_id,
                                               text=result_message)
                return

            await context.bot.send_message(chat_id=chat_id, text=result_message)
            user_states[chat_id] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
        except ValueError:
            await context.bot.send_message(chat_id=chat_id,
                                           text='–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM HH:MM.',
                                   reply_markup=get_cancel_keyboard())
            return
    else:
        await context.bot.send_message(chat_id=chat_id,
                                       text='–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –∏–∑ —Å–ø–∏—Å–∫–∞, –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É.',
                                   reply_markup=get_cancel_keyboard())
        return

async def view_records(update, context) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏."""
    chat_id = update.callback_query.message.chat.id  # –ò—Å–ø–æ–ª—å–∑—É–µ–º callback_query

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —Å –∑–∞–ø–∏—Å—è–º–∏
    if not os.path.exists(DATA_FILE):
        await context.bot.send_message(chat_id=chat_id, text='–ó–∞–ø–∏—Å–µ–π –Ω–µ—Ç.')
        return

    # –ß—Ç–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ñ–∞–π–ª–∞
    try:
        df = pd.read_csv(DATA_FILE)

        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–ø–∏—Å–µ–π –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏
        df['–î–∞—Ç–∞'] = pd.to_datetime(df['–î–∞—Ç–∞'] + ' ' + df['–í—Ä–µ–º—è'], format='%d.%m.%Y %H:%M')
        sorted_records = df.sort_values(by='–î–∞—Ç–∞')

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if not sorted_records.empty:
            message = "–¢–≤–æ–∏ –±–ª–∏–∑–∂–∞–π—à–∏–µ –∑–∞–ø–∏—Å–∏:\n"
            for index, row in sorted_records.iterrows():
                record_message = f"üìÖ **–î–∞—Ç–∞:**   {row['–î–∞—Ç–∞'].strftime('%d.%m.%Y')}  ‚è∞ **–í—Ä–µ–º—è:**   {row['–í—Ä–µ–º—è']}"

                # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                if row['–ò–º—è'] != "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ":
                    record_message += f"  üë§ **–ò–º—è:**   {row['–ò–º—è']}"

                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Ä–∞–≤–Ω–æ 1
                if row['–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ'] == 1:
                    record_message += "  ‚úÖ   **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ**"

                message += f"{record_message}\n"
        else:
            message = "–ó–∞–ø–∏—Å–µ–π –Ω–µ—Ç."

        await context.bot.send_message(chat_id=chat_id, text=message)

    except Exception as e:
        await context.bot.send_message(chat_id=chat_id, text='–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π: {}'.format(str(e)),
                                       reply_markup=get_cancel_keyboard())
        return

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –±–ª–æ–∫ –∫–Ω–æ–ø–æ–∫
    if is_admin(chat_id):  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        reply_markup = get_admin_buttons()  # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
    else:
        reply_markup = get_user_buttons()  # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await context.bot.send_message(chat_id=chat_id,
                                   text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                                   reply_markup=reply_markup)


def setup_handlers(application) -> None:
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –±–æ—Ç–∞."""
    application.add_handler(CommandHandler('start', wake_up))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–±–æ–¥–Ω–æ–π –¥–∞—Ç—ã
    application.add_handler(
        CallbackQueryHandler(add_date_handler, pattern='^add_date$'))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–ø–∏—Å–µ–π
    application.add_handler(
        CallbackQueryHandler(view_records, pattern='^view_records$'))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–ø–∏—Å–µ–π

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã
    application.add_handler(
        CallbackQueryHandler(cancel_handler, pattern='^cancel$'))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞—Ç—ã
    application.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND,
                       handle_date_input))  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π